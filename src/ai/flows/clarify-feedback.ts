// src/ai/flows/clarify-feedback.ts
'use server';

/**
 * @fileOverview A flow to clarify user feedback on a drawing using generative AI.
 *
 * - clarifyDrawingFeedback - A function that handles the feedback clarification process.
 * - ClarifyDrawingFeedbackInput - The input type for the clarifyDrawingFeedback function.
 * - ClarifyDrawingFeedbackOutput - The return type for the clarifyDrawingFeedback function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ClarifyDrawingFeedbackInputSchema = z.object({
  feedback: z
    .string()
    .describe('The initial user feedback on the drawing, which may be unclear.'),
  drawingDescription: z
    .string()
    .describe('A description of the current state of the drawing.'),
  userInteractions: z
    .string()
    .describe('A description of the recent user interactions on the whiteboard.'),
});
export type ClarifyDrawingFeedbackInput = z.infer<typeof ClarifyDrawingFeedbackInputSchema>;

const ClarifyDrawingFeedbackOutputSchema = z.object({
  clarifiedFeedbackOptions: z
    .array(z.string())
    .describe('An array of clarified feedback options generated by the AI.'),
});
export type ClarifyDrawingFeedbackOutput = z.infer<typeof ClarifyDrawingFeedbackOutputSchema>;

export async function clarifyDrawingFeedback(input: ClarifyDrawingFeedbackInput): Promise<ClarifyDrawingFeedbackOutput> {
  return clarifyDrawingFeedbackFlow(input);
}

const clarifyFeedbackPrompt = ai.definePrompt({
  name: 'clarifyFeedbackPrompt',
  input: {schema: ClarifyDrawingFeedbackInputSchema},
  output: {schema: ClarifyDrawingFeedbackOutputSchema},
  prompt: `You are an AI assistant that helps clarify user feedback on collaborative whiteboard drawings.

The user has provided the following initial feedback: {{{feedback}}}

The current state of the drawing can be described as: {{{drawingDescription}}}

Recent user interactions on the whiteboard include: {{{userInteractions}}}

Based on this information, generate an array of 3-5 clarified feedback options that the user might have intended.
These options should be more specific and actionable than the original feedback.
Return the clarified feedback options as a JSON array of strings.
`,
});

const clarifyDrawingFeedbackFlow = ai.defineFlow(
  {
    name: 'clarifyDrawingFeedbackFlow',
    inputSchema: ClarifyDrawingFeedbackInputSchema,
    outputSchema: ClarifyDrawingFeedbackOutputSchema,
  },
  async input => {
    const {output} = await clarifyFeedbackPrompt(input);
    return output!;
  }
);
